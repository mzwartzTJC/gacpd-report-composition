<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:fo="http://www.w3.org/1999/XSL/Format">
    <xsl:output method="xml" indent="yes"/>
    
    <!--Global variables-->
    <xsl:variable name="list_label" select="'- '"/>
    <xsl:variable name="list_label2" select="'-- '"/>
    <xsl:variable name="new_line" select="'&#10;'"/>
    <xsl:variable name="list_break" select="'#'"/>
    
    <xsl:template match="/">
        <fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" xml:lang="en">
            <fo:layout-master-set>
                <fo:simple-page-master master-name="crswlk" page-height="8.5in" page-width="11in" margin="0.25in">
                    <fo:region-body margin-bottom="0.6in"/>
                    <fo:region-after extent="0.6in"/>
                </fo:simple-page-master>
            </fo:layout-master-set>
            
            <fo:declarations>
                <x:xmpmeta xmlns:x="adobe:ns:meta/">
                    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
                        <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
                            <dc:title><xsl:value-of select="CRSWLK/ix_ds"/></dc:title>
                            <dc:creator>Joint Commission Department of Global Standards and Survery Methods</dc:creator>
                        </rdf:Description>
                    </rdf:RDF>
                </x:xmpmeta>
            </fo:declarations>
            
            <fo:page-sequence master-reference="crswlk" id="main-sequence">
                <fo:title>TJC Crosswalk</fo:title>
                <!--Footer information -->
                <fo:static-content flow-name = "xsl-region-after" role="artifact">
                    <fo:block><fo:leader leader-pattern="rule" rule-thickness="1pt" color="black" leader-length="100%"/></fo:block>
                    <fo:table table-layout="fixed" width="100%">
                        <fo:table-column column-width="30%"/>
                        <fo:table-column column-width="40%"/>
                        <fo:table-column column-width="30%"/>
                        <fo:table-body>
                            <fo:table-row>
                                <fo:table-cell display-align="center"> 
                                    <fo:block font-size="8pt" text-align="left"><xsl:value-of select="CRSWLK/crswlk_desc"/></fo:block>
                                </fo:table-cell>
                                <fo:table-cell display-align="center">
                                    <fo:block font-size="8pt" text-align="center">Page <fo:page-number/> of <fo:page-number-citation-last ref-id="main-sequence"/></fo:block>
                                    <fo:block font-size="8pt" text-align="center">Report Generated by GACPD</fo:block>
                                    <fo:block font-size="8pt" text-align="center"><xsl:value-of select="CRSWLK/run_date"/></fo:block>
                                </fo:table-cell>
                                <fo:table-cell display-align="center">
                                    <fo:block font-size="8pt" text-align="right">Â© <xsl:value-of select="substring(CRSWLK/efc_dt, string-length(CRSWLK/run_date) - 3)"/> Joint Commission</fo:block>
                                </fo:table-cell>
                            </fo:table-row>
                        </fo:table-body>
                    </fo:table>
                </fo:static-content>
                
                <!-- Title and Logo -->
                <fo:flow flow-name = "xsl-region-body">
                    
                    <fo:block>
                        <fo:external-graphic src="../../../stylesheets/images/327660034JC_logo_RGB_TM.svg"  content-width = "180" content-height = "36" fox:alt-text="Joint Commission Logo"/>
                    </fo:block>
                    <fo:block font-size="16pt" text-align="center">
                        <xsl:value-of select="CRSWLK/title_text"/>
                    </fo:block>
                    <fo:block font-size="14pt" text-align="center">
                        <xsl:value-of select="CRSWLK/crswlk_desc"/>
                    </fo:block>
                    <fo:block/>
                    <fo:block><fo:leader leader-pattern="rule" rule-thickness="1pt" color="black" leader-length="100%"/></fo:block>
                    
                    <!-- START CRSWLK TABLE HERE -->
                    <fo:table table-layout="fixed" width="100%" border="1pt solid black">
                        <fo:table-column column-width="20%"/>
                        <fo:table-column column-width="20%"/>
                        <fo:table-column column-width="20%"/>
                        <fo:table-column column-width="40%"/>
                        
                        <fo:table-header>
                            <fo:table-row border="1pt solid black">
                                <fo:table-cell role="TH" border="1pt solid black" text-align="center" display-align="center" padding="3pt">
                                    <xsl:choose>
                                        <xsl:when test="CRSWLK/ix_id = 2180">
                                            <fo:block font-size="9pt" font-weight="bold">Quality Standard Section</fo:block>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <fo:block font-size="9pt" font-weight="bold">CFR Number</fo:block>
                                            <!--Define marker for cop_rqr_nm that is active when entering new page--> 
                                            <fo:block font-size="9pt" font-weight="bold" padding-bottom="10pt">
                                                <fo:retrieve-table-marker retrieve-class-name="cop_nm_marker" retrieve-boundary-within-table="table" retrieve-position-within-table="first-including-carryover"/>
                                            </fo:block>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </fo:table-cell>
                                <fo:table-cell role="TH" border="1pt solid black" text-align="center" display-align="center" padding="3pt"><fo:block font-size="9pt" font-weight="bold">Medicare Requirements</fo:block></fo:table-cell>
                                <fo:table-cell role="TH" border="1pt solid black" text-align="center" display-align="center" padding="3pt"><fo:block font-size="9pt" font-weight="bold">Joint Commission Equivalent Number</fo:block></fo:table-cell>
                                <fo:table-cell role="TH" border="1pt solid black" text-align="center" display-align="center" padding="3pt"><fo:block font-size="9pt" font-weight="bold">Joint Commission Standards and Elements of Performance</fo:block></fo:table-cell>
                            </fo:table-row>
                        </fo:table-header>
                        
                        <fo:table-body>
                            <xsl:for-each select="CRSWLK/COP/COP_ELE">
                                <fo:table-row border="1pt solid black" border-before-width.conditionality="retain" border-after-width.conditionality="retain"> <!-- Somthing here to print borders on page breaks -->
                                    <fo:table-cell number-columns-spanned="2">
                                        <fo:table table-layout="fixed" width = "100%">  
                                            <fo:table-column column-width="40%"/>
                                            <fo:table-column column-width="60%"/>
                                            <fo:table-header><fo:table-row  border="1pt solid black" keep-with-next.within-page="always" background-color="#E0E0E0">
                                                    <xsl:choose>
                                                        <xsl:when test="//ix_id = 2180">
                                                            <fo:table-cell number-columns-spanned="2" padding="1pt">
                                                                <fo:block font-size="8pt" font-weight="bold"><xsl:value-of select="../cop_ttl_ds"/></fo:block>
                                                                <fo:block font-size="8pt" font-weight="bold"><xsl:value-of select="TAG/TAG_HDG"/></fo:block>
                                                            </fo:table-cell>
                                                        </xsl:when>
                                                        <xsl:otherwise>
                                                            <fo:table-cell padding="1pt">
                                                                <fo:block font-size="8pt" font-weight="bold">
                                                                    <xsl:value-of select="cop_rqr_nm"/>
                                                                </fo:block>
                                                            </fo:table-cell>
                                                            
                                                            <fo:table-cell>
                                                                <fo:block font-size="8pt" font-weight="bold" padding="1pt">
                                                                    <xsl:if test="TAG and not(//ix_id = 3243 or //ix_id = 3610 or //ix_id =3141)">TAG: 
                                                                        <xsl:for-each select="TAG">
                                                                            <xsl:value-of select="TAG_NM" />
                                                                            <xsl:if test="position() != last()">, </xsl:if>
                                                                        </xsl:for-each>
                                                                    </xsl:if>
                                                                </fo:block>
                                                            </fo:table-cell>
                                                        </xsl:otherwise>
                                                    </xsl:choose>
                                                </fo:table-row></fo:table-header>
                                            <fo:table-body>    
                                                <fo:table-row><fo:table-cell role="TD" number-columns-spanned="2" padding="1pt" padding-bottom="8pt">
                                                        <xsl:choose>
                                                            <xsl:when test="string-length(cop_tx) &lt; 2000">
                                                                <fo:block font-size="8pt" linefeed-treatment="preserve" keep-together.within-page ="always">
                                                                    <xsl:value-of select="cop_tx"/>
                                                                </fo:block>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <fo:block font-size="8pt" linefeed-treatment="preserve">
                                                                    <xsl:value-of select="cop_tx"/>
                                                                </fo:block>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                    </fo:table-cell></fo:table-row>
                                            </fo:table-body>
                                        </fo:table>                                        
                                    </fo:table-cell>
                                    
                                    <fo:table-cell number-columns-spanned="2" border="1pt solid black">
                                        <fo:marker marker-class-name="cop_nm_marker"><fo:inline><xsl:value-of select="./cop_rqr_nm"/></fo:inline></fo:marker>
                                        <fo:table table-layout="fixed" width = "100%" padding="1pt">
                                            <fo:table-column column-width="10%"/>
                                            <fo:table-column column-width="10%"/>
                                            <fo:table-column column-width="80%"/>
                                            <fo:table-body>
                                                <xsl:choose>
                                                    <xsl:when test="STD or COMMENT">
                                                        <xsl:for-each select="STD">
                                                            <fo:table-row keep-with-next.within-page="always" border="1pt solid black" background-color="#E0E0E0">
                                                                <fo:table-cell role="TH" number-columns-spanned="2">
                                                                    <fo:block padding="1pt" font-size="8pt" font-weight="bold" start-indent="2pt"><xsl:value-of select="std_lbl"/></fo:block>
                                                                </fo:table-cell>
                                                                <fo:table-cell role="TH">
                                                                    <fo:block padding="1pt" font-size="8pt" font-weight="bold" keep-together.within-page="always"><xsl:value-of select="std_tx"/></fo:block>
                                                                </fo:table-cell>
                                                            </fo:table-row>
                                                            <xsl:for-each select="EP">
                                                                <fo:table-row number-columns-spanned="3" border-top="1pt solid black" keep-together.within-page="always">
                                                                    <fo:table-cell role="TD" padding="1pt"><fo:block font-size="8pt" font-weight="bold" start-indent="2pt">EP <xsl:value-of select="mc_tx_seq_qt"/></fo:block></fo:table-cell>
                                                                    <fo:table-cell role="TD" number-columns-spanned="2" padding="1pt">
                                                                        <xsl:call-template name="tag_text">
                                                                            <xsl:with-param name="txt" select="mc_body_tx"/>
                                                                        </xsl:call-template>
                                                                    </fo:table-cell>
                                                                </fo:table-row>
                                                            </xsl:for-each>
                                                        </xsl:for-each>
                                                        <xsl:choose>
                                                            <xsl:when test="STD and COMMENT">
                                                                <fo:table-row border="1pt solid black">
                                                                    <fo:table-cell number-columns-spanned="3" role="TD" padding="1pt" background-color="#F0F0F9">
                                                                        <xsl:call-template name="tag_text">
                                                                            <xsl:with-param name="txt" select="COMMENT"/>
                                                                        </xsl:call-template>
                                                                    </fo:table-cell>
                                                                </fo:table-row>
                                                            </xsl:when>
                                                            <xsl:when test="COMMENT">
                                                                <fo:table-row border="1pt solid black">
                                                                    <fo:table-cell number-columns-spanned="3" role="TH" padding="1pt" background-color="#F0F0F9">
                                                                        <xsl:call-template name="tag_text">
                                                                            <xsl:with-param name="txt" select="COMMENT"/>
                                                                        </xsl:call-template>
                                                                    </fo:table-cell>
                                                                </fo:table-row>
                                                            </xsl:when>
                                                        </xsl:choose>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <fo:table-row><fo:table-cell role="TH"><fo:block/></fo:table-cell></fo:table-row>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </fo:table-body>
                                        </fo:table>
                                    </fo:table-cell>
                                </fo:table-row>
                            </xsl:for-each>
                        </fo:table-body>
                    </fo:table>
                </fo:flow>
            </fo:page-sequence>
        </fo:root>
    </xsl:template>
    
    
    
    <!-- Template for list tagging -->
    <xsl:template name="tag_text">
        <xsl:param name="txt"/>
        <xsl:choose>
            <xsl:when test="contains($txt, $new_line)">
                <xsl:choose>
                    <xsl:when test="starts-with(normalize-space($txt), $list_label)">
                        <!--recurring loop to create a list of list elements -->
                        <xsl:call-template name="create_list_list">
                            <xsl:with-param name="txt" select="$txt"/>
                            <xsl:with-param name="list_txt"/>
                        </xsl:call-template>
                        
                    </xsl:when>
                    <xsl:otherwise> <!-- if line isn't a list item -->
                        <xsl:if test="string-length(substring-before($txt, $new_line)) > 0">
                            <fo:block font-size="8pt"><xsl:value-of select="substring-before($txt, $new_line)"/></fo:block>
                        </xsl:if>
                        
                        <xsl:variable name="txt" select="substring-after($txt, $new_line)"/>
                        
                        <xsl:call-template name="tag_text">
                            <xsl:with-param name="txt" select="$txt"/>
                        </xsl:call-template>
                        
                    </xsl:otherwise>
                </xsl:choose>              
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="starts-with(normalize-space($txt), $list_label)">
                        <fo:list-block>
                            <fo:list-item>
                                <fo:list-item-label><fo:block font-size="8pt" start-indent="10pt">â¢</fo:block></fo:list-item-label>
                                <fo:list-item-body><fo:block font-size="8pt" start-indent="20pt"><xsl:value-of select="substring-after($txt, $list_label)"/></fo:block></fo:list-item-body>
                            </fo:list-item>
                        </fo:list-block>                        
                    </xsl:when>
                    <xsl:otherwise>
                        <fo:block font-size="8pt"><xsl:value-of select="$txt"/></fo:block>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        
    </xsl:template>
    
    
    <xsl:template name="create_list_list">
        <xsl:param name="txt"/>
        <xsl:param name="list_txt"/>
        <xsl:choose>
            <xsl:when test="starts-with(normalize-space($txt), $list_label) or starts-with(normalize-space($txt), $list_label2)">
                <xsl:choose>
                    <xsl:when test="contains($txt, $new_line)">
                        <xsl:variable name="list_txt" select="concat($list_txt, substring-before($txt, $new_line), $list_break)"/>
                        <xsl:variable name="txt" select="substring-after($txt, $new_line)"/>
                        <xsl:call-template name="create_list_list">
                            <xsl:with-param name="txt" select="$txt"/>
                            <xsl:with-param name="list_txt" select="$list_txt"/>
                        </xsl:call-template>
                    </xsl:when>
                    
                    <xsl:otherwise>
                        <xsl:variable name="list_txt" select="concat($list_txt, $txt, $list_break)"/>
                        
                        <fo:list-block>
                            <!--call template to print list --> 
                            <xsl:call-template name="tag_list">
                                <xsl:with-param name="list_txt" select="$list_txt"/>
                                <xsl:with-param name="sublist_txt"/>
                            </xsl:call-template>
                        </fo:list-block>
                    </xsl:otherwise>
                    
                </xsl:choose>
            </xsl:when>
            
            <xsl:otherwise>
                <!--call template to print list --> 
                <fo:list-block>
                    <xsl:call-template name="tag_list">
                        <xsl:with-param name="list_txt" select="$list_txt"/>
                        <xsl:with-param name="sublist_txt"/>
                    </xsl:call-template>
                </fo:list-block>
                
                <xsl:call-template name="tag_text">
                    <xsl:with-param name="txt" select="$txt"/>
                </xsl:call-template>
                
            </xsl:otherwise>
        </xsl:choose>
        
    </xsl:template>
    
    
    <xsl:template name="tag_list">
        <xsl:param name="list_txt" />
        <xsl:param name="sublist_txt" />
        <xsl:choose>
            <!-- If the list contains multiple items, tag one, redfine variable, pass back through --> 
            <xsl:when test="string-length($list_txt)-string-length(translate($list_txt, $list_break, ''))>1">
                <xsl:choose>
                    <xsl:when test="starts-with(normalize-space($list_txt), $list_label2)">
                        <xsl:variable name="sublist_txt" select="concat($sublist_txt, substring-before($list_txt, $list_break), $list_break)"/>
                        <xsl:variable name="list_txt" select="substring-after($list_txt, $list_break)"/>
                        
                        <xsl:call-template name="tag_list">
                            <xsl:with-param name="list_txt" select="$list_txt"/>
                            <xsl:with-param name="sublist_txt" select="$sublist_txt"/>
                        </xsl:call-template>
                        
                    </xsl:when>               
                    <xsl:otherwise>
                        <xsl:if test="string-length($sublist_txt)>1">
                            <fo:list-item><fo:list-item-label><fo:block></fo:block></fo:list-item-label><fo:list-item-body>
                                    <fo:list-block>
                                        <xsl:call-template name="tag_sublist">
                                            <xsl:with-param name="sublist_txt" select="$sublist_txt"/>
                                        </xsl:call-template>
                                    </fo:list-block>                 
                                </fo:list-item-body></fo:list-item>
                        </xsl:if>
                        
                        <fo:list-item>
                            <fo:list-item-label><fo:block font-size="8pt" start-indent="10pt">â¢</fo:block></fo:list-item-label>
                            <fo:list-item-body><fo:block font-size="8pt" start-indent="20pt"><xsl:value-of select="substring-after(substring-before($list_txt, $list_break), $list_label)"/></fo:block></fo:list-item-body>
                        </fo:list-item>
                        <xsl:variable name="list_txt" select="substring-after($list_txt, $list_break)"/>
                        
                        <xsl:call-template name="tag_list">
                            <xsl:with-param name="list_txt" select="$list_txt"/>
                            <xsl:with-param name="sublist_txt" select="''"/>
                        </xsl:call-template>
                    </xsl:otherwise>
                </xsl:choose>
                
            </xsl:when>
            <!-- Tag last list item --> 
            <xsl:otherwise>
                <xsl:choose>
                    <xsl:when test="starts-with(normalize-space($list_txt), $list_label2)">
                        <xsl:variable name="sublist_txt" select="concat($sublist_txt, $list_txt)"/>
                        <fo:list-item><fo:list-item-label><fo:block></fo:block></fo:list-item-label><fo:list-item-body>
                                <fo:list-block>
                                    <xsl:call-template name="tag_sublist">
                                        <xsl:with-param name="sublist_txt" select="$sublist_txt"/>
                                    </xsl:call-template>
                                </fo:list-block>
                            </fo:list-item-body></fo:list-item>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="string-length($sublist_txt)>1">
                            <fo:list-item><fo:list-item-label><fo:block></fo:block></fo:list-item-label><fo:list-item-body>
                                    <fo:list-block>
                                        <xsl:call-template name="tag_sublist">
                                            <xsl:with-param name="sublist_txt" select="$sublist_txt"/>
                                        </xsl:call-template>
                                    </fo:list-block>
                                </fo:list-item-body></fo:list-item>
                        </xsl:if>
                        
                        <fo:list-item>
                            <fo:list-item-label><fo:block font-size="8pt" start-indent = "10pt">â¢</fo:block></fo:list-item-label>
                            <fo:list-item-body><fo:block font-size="8pt" start-indent="20pt"><xsl:value-of select="substring-before(substring-after($list_txt, $list_label), $list_break)"/></fo:block></fo:list-item-body>
                        </fo:list-item>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    
    <xsl:template name="tag_sublist">
        <xsl:param name="sublist_txt"/>
        <xsl:choose>
            <!-- If the list contains multiple items, tag one, redfine variable, pass back through --> 
            <xsl:when test="string-length($sublist_txt)-string-length(translate($sublist_txt, $list_break, ''))>1">
                <fo:list-item start-indent="20pt">
                    <fo:list-item-label><fo:block font-size="8pt" start-indent="30pt">â¢</fo:block></fo:list-item-label>
                    <fo:list-item-body><fo:block font-size="8pt" start-indent="40pt"><xsl:value-of select="substring-after(substring-before($sublist_txt, $list_break), $list_label)"/></fo:block></fo:list-item-body>
                </fo:list-item>
                <xsl:variable name="sublist_txt" select="substring-after($sublist_txt, $list_break)"/>
                
                <xsl:call-template name="tag_sublist">
                    <xsl:with-param name="sublist_txt" select="$sublist_txt"/>
                </xsl:call-template>
                
            </xsl:when>
            <!-- Tag last list item --> 
            <xsl:otherwise>
                <xsl:if test="starts-with(normalize-space($sublist_txt), $list_label2)">
                    <fo:list-item start-indent="20pt">
                        <fo:list-item-label><fo:block font-size="8pt" start-indent="30pt">â¢</fo:block></fo:list-item-label>
                        <fo:list-item-body><fo:block font-size="8pt" start-indent="40pt"><xsl:value-of select="substring-before(substring-after($sublist_txt, $list_label), $list_break)"/></fo:block></fo:list-item-body>
                    </fo:list-item>
                </xsl:if>
            </xsl:otherwise>
        </xsl:choose>
        
    </xsl:template>
    
</xsl:stylesheet>